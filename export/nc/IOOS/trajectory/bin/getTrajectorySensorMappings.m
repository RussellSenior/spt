function sensor_map = getTrajectorySensorMappings(varargin)

sensor_map = [];

NC_TEMPLATE = 'glider_trajectory_uv_template_v.0.0.nc';
if ~exist(NC_TEMPLATE, 'file')
    error(sprintf('%s:fileNotFound', mfilename),...
        'Cannot find the NetCDF template file: %s',...
        NC_TEMPLATE);
end
% Read in the schema and use it to initialize the sensor mapping data
% structure
try
    nc_schema = ncinfo(NC_TEMPLATE);
catch ME
    fprintf(2,...
        '%s: %s\n',...
        ME.identifier,...
        ME.message);
    return;
end

nc_vars = {nc_schema.Variables.Name}';
for x = 1:length(nc_vars)
    sensor_map.(nc_vars{x}) = [];
end

% Add defaults sensor mappings
sensor_map.profile_id = {'drv_proInds',...
    }';

sensor_map.pressure = {'drv_sci_water_pressure',...
    'drv_m_water_pressure',...
    'drv_m_pressure',...
    }';

sensor_map.depth = {'drv_depth',...
    }';

sensor_map.lat = {'drv_m_gps_lat',...
    'drv_latitude',...
    }';

sensor_map.lon = {'drv_m_gps_lon',...
    'drv_longitude',...
    }';

sensor_map.conductivity = {'drv_sea_water_electrical_conductivity',...
    'drv_sci_water_cond',...
    'drv_m_water_cond',...
    }';

sensor_map.density = {'drv_sea_water_density',...
    }';

sensor_map.salinity = {'drv_sea_water_salinity',...
    }';

sensor_map.temperature = {'drv_sea_water_temperature',...
    'sci_water_temp',...
    'm_water_temp',...
    }';

sensor_map.u = {'drv_u',...
    }';

sensor_map.v = {'drv_v',...
    }';

    